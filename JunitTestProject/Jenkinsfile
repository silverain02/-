pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                // 소스코드 체크아웃
                checkout scm
            }
        }
        stage('Build') {
            steps {
                // Java 파일들을 컴파일하여 생성된 클래스 파일을 classes 디렉토리에 저장
                // Windows 일 경우 bat
                bat 'mkdir -p classes'
                bat 'javac -encoding UTF-8 -cp "JunitTestProject/lib/*" -d classes JunitTestProject/src/*.java'
            }
        }
        stage('Test') {
            steps {
                // JUnit 5 테스트 실행을 위한 classpath 설정 및 테스트 실행
                
                script{
                 	def classpath = "JunitTestProject/lib/junit-platform-console-standalone-1.7.1.jar"
                 	//JunitTest실행
                 	bat "mkdir -p test_result"
                    bat 'java -cp {classpath} org.junit.platform.console.ConsoleLauncher --scan-classpath -classpath=classes > test_result/test_results.txt'
                    bat "cat test_result/test_results.txt"
                }
              		
             }
        }
    }
    post {
        always {
            // 테스트 결과 파일을 저장하기 위해 아카이브
            archiveArtifacts "test_result/*"
        }
        failure {
            echo 'Build or test failed'
        }
        success {
            echo 'Build and test succeeded'
        }
    }
}
